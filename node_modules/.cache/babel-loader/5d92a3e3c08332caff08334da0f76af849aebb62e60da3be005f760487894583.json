{"ast":null,"code":"// State-ul initial al cart-ului.\nexport const favInitialState = {\n  // Initial nu avem produse in cart.\n  products: []\n};\n\n// Reducerul primeste ca parametri state-ul, respectiv rezultatul apelului unei actiuni.\nexport function favReducer(state, action) {\n  // Evaluam tipurile actiunii:\n  switch (action.type) {\n    case \"ADD_TO_FAV\":\n      {\n        // Din state extragem produsele anterioare.\n        const previousProducts = state.products;\n        // Din actiune extragem produsul adaugat.\n        const newProduct = action.payload;\n        const foundProduct = previousProducts.find(product => {\n          return product.id === newProduct.id;\n        });\n        if (!foundProduct) {\n          newProduct.quantity = 1;\n          const newState = {\n            products: [...previousProducts, newProduct]\n          };\n          return newState;\n        } else {\n          const updatedProducts = previousProducts.map(product => {\n            if (product.id === newProduct.id) {\n              return {\n                ...product,\n                quantity: product.quantity + 1\n              };\n            }\n            return product;\n          });\n\n          // Generam noul state.\n          const newState = {\n            products: [...updatedProducts]\n          };\n          // Returnam noul state.\n          return newState;\n        }\n      }\n    case \"REMOVE_FROM_FAV\":\n      {\n        const filteredProducts = state.products.filter(product => {\n          return product.id !== action.payload;\n        });\n        const newState = {\n          products: filteredProducts\n        };\n        return newState;\n      }\n    // Nu uitam sa returnam state-ul pe cazul default\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["favInitialState","products","favReducer","state","action","type","previousProducts","newProduct","payload","foundProduct","find","product","id","quantity","newState","updatedProducts","map","filteredProducts","filter"],"sources":["C:/Users/fifin/Desktop/Curs IT School/sesiunea 33/app/src/store/Favorites/reducer.js"],"sourcesContent":["// State-ul initial al cart-ului.\r\nexport const favInitialState = {\r\n  // Initial nu avem produse in cart.\r\n  products: [],\r\n};\r\n\r\n// Reducerul primeste ca parametri state-ul, respectiv rezultatul apelului unei actiuni.\r\nexport function favReducer(state, action) {\r\n  // Evaluam tipurile actiunii:\r\n  switch (action.type) {\r\n    case \"ADD_TO_FAV\": {\r\n      // Din state extragem produsele anterioare.\r\n      const previousProducts = state.products;\r\n      // Din actiune extragem produsul adaugat.\r\n      const newProduct = action.payload;\r\n\r\n      const foundProduct = previousProducts.find((product) => {\r\n        return product.id === newProduct.id;\r\n      });\r\n\r\n      if (!foundProduct) {\r\n        newProduct.quantity = 1;\r\n\r\n        const newState = {\r\n          products: [...previousProducts, newProduct],\r\n        };\r\n\r\n        return newState;\r\n      } else {\r\n        const updatedProducts = previousProducts.map((product) => {\r\n          if (product.id === newProduct.id) {\r\n            return {\r\n              ...product,\r\n              quantity: product.quantity + 1,\r\n            };\r\n          }\r\n\r\n          return product;\r\n        });\r\n\r\n        // Generam noul state.\r\n        const newState = {\r\n          products: [...updatedProducts],\r\n        };\r\n        // Returnam noul state.\r\n        return newState;\r\n      }\r\n    }\r\n\r\n    case \"REMOVE_FROM_FAV\": {\r\n      const filteredProducts = state.products.filter((product) => {\r\n        return product.id !== action.payload;\r\n      });\r\n      const newState = { products: filteredProducts };\r\n      return newState;\r\n    }\r\n    // Nu uitam sa returnam state-ul pe cazul default\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,eAAe,GAAG;EAC7B;EACAC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,OAAO,SAASC,UAAU,CAACC,KAAK,EAAEC,MAAM,EAAE;EACxC;EACA,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MAAE;QACjB;QACA,MAAMC,gBAAgB,GAAGH,KAAK,CAACF,QAAQ;QACvC;QACA,MAAMM,UAAU,GAAGH,MAAM,CAACI,OAAO;QAEjC,MAAMC,YAAY,GAAGH,gBAAgB,CAACI,IAAI,CAAEC,OAAO,IAAK;UACtD,OAAOA,OAAO,CAACC,EAAE,KAAKL,UAAU,CAACK,EAAE;QACrC,CAAC,CAAC;QAEF,IAAI,CAACH,YAAY,EAAE;UACjBF,UAAU,CAACM,QAAQ,GAAG,CAAC;UAEvB,MAAMC,QAAQ,GAAG;YACfb,QAAQ,EAAE,CAAC,GAAGK,gBAAgB,EAAEC,UAAU;UAC5C,CAAC;UAED,OAAOO,QAAQ;QACjB,CAAC,MAAM;UACL,MAAMC,eAAe,GAAGT,gBAAgB,CAACU,GAAG,CAAEL,OAAO,IAAK;YACxD,IAAIA,OAAO,CAACC,EAAE,KAAKL,UAAU,CAACK,EAAE,EAAE;cAChC,OAAO;gBACL,GAAGD,OAAO;gBACVE,QAAQ,EAAEF,OAAO,CAACE,QAAQ,GAAG;cAC/B,CAAC;YACH;YAEA,OAAOF,OAAO;UAChB,CAAC,CAAC;;UAEF;UACA,MAAMG,QAAQ,GAAG;YACfb,QAAQ,EAAE,CAAC,GAAGc,eAAe;UAC/B,CAAC;UACD;UACA,OAAOD,QAAQ;QACjB;MACF;IAEA,KAAK,iBAAiB;MAAE;QACtB,MAAMG,gBAAgB,GAAGd,KAAK,CAACF,QAAQ,CAACiB,MAAM,CAAEP,OAAO,IAAK;UAC1D,OAAOA,OAAO,CAACC,EAAE,KAAKR,MAAM,CAACI,OAAO;QACtC,CAAC,CAAC;QACF,MAAMM,QAAQ,GAAG;UAAEb,QAAQ,EAAEgB;QAAiB,CAAC;QAC/C,OAAOH,QAAQ;MACjB;IACA;IACA;MACE,OAAOX,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}